<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinkaji.solveza.api.usermanagement.infrastructure.mapper.RoleMapper">

    <!-- Result Map -->
    <resultMap id="RoleResult" type="com.shinkaji.solveza.api.usermanagement.infrastructure.mapper.dto.RoleDto">
        <constructor>
            <idArg column="id" javaType="String"/>
            <arg column="name" javaType="String"/>
            <arg column="description" javaType="String"/>
            <arg column="created_at" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <resultMap id="RolePermissionResult" type="com.shinkaji.solveza.api.usermanagement.infrastructure.mapper.dto.RolePermissionDto">
        <constructor>
            <arg column="role_id" javaType="String"/>
            <arg column="permission_id" javaType="String"/>
            <arg column="granted_at" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <!-- Select Queries -->
    <select id="findById" resultMap="RoleResult">
        SELECT id, name, description, created_at
        FROM roles
        WHERE id = #{id}::uuid
    </select>

    <select id="findByName" resultMap="RoleResult">
        SELECT id, name, description, created_at
        FROM roles
        WHERE name = #{name}
    </select>


    <select id="findAll" resultMap="RoleResult">
        SELECT id, name, description, created_at
        FROM roles
        ORDER BY name
    </select>

    <select id="existsById" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM roles WHERE id = #{id}::uuid)
    </select>

    <select id="existsByName" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM roles WHERE name = #{name})
    </select>

    <select id="findRolePermissionsByRoleId" resultMap="RolePermissionResult">
        SELECT role_id, permission_id, granted_at
        FROM role_permissions
        WHERE role_id = #{roleId}::uuid
    </select>

    <!-- Insert Queries -->
    <insert id="insert">
        INSERT INTO roles (id, name, description, created_at)
        VALUES (#{role.id}::uuid, #{role.name}, #{role.description}, #{role.createdAt})
    </insert>

    <insert id="insertRolePermission">
        INSERT INTO role_permissions (role_id, permission_id, granted_at)
        VALUES (#{rolePermission.roleId}::uuid, #{rolePermission.permissionId}::uuid, #{rolePermission.grantedAt})
    </insert>

    <!-- Update Queries -->
    <update id="update">
        UPDATE roles
        SET name = #{role.name},
            description = #{role.description}
        WHERE id = #{role.id}::uuid
    </update>

    <!-- Delete Queries -->
    <delete id="delete">
        DELETE FROM roles WHERE id = #{id}::uuid
    </delete>

    <delete id="deleteRolePermission">
        DELETE FROM role_permissions WHERE role_id = #{roleId}::uuid AND permission_id = #{permissionId}::uuid
    </delete>

</mapper>
