<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinkaji.solveza.api.account.infrastructure.mapper.AccountMapper">

    <!-- Result Map -->
    <resultMap id="AccountResult" type="com.shinkaji.solveza.api.account.infrastructure.mapper.dto.AccountDto">
        <constructor>
            <idArg column="id" javaType="String"/>
            <arg column="requester_id" javaType="String"/>
            <arg column="payer_id" javaType="String"/>
            <arg column="created_at" javaType="java.time.LocalDateTime"/>
            <arg column="updated_at" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <!-- Select Queries -->
    <select id="findById" resultMap="AccountResult">
        SELECT id, requester_id, payer_id, created_at, updated_at
        FROM accounts
        WHERE id = #{id}::uuid
    </select>

    <select id="findByUserId" resultMap="AccountResult">
        SELECT id, requester_id, payer_id, created_at, updated_at
        FROM accounts
        WHERE requester_id = #{userId}::uuid OR payer_id = #{userId}::uuid
        ORDER BY created_at DESC
    </select>

    <select id="findByRequesterId" resultMap="AccountResult">
        SELECT id, requester_id, payer_id, created_at, updated_at
        FROM accounts
        WHERE requester_id = #{requesterId}::uuid
        ORDER BY created_at DESC
    </select>

    <select id="findByPayerId" resultMap="AccountResult">
        SELECT id, requester_id, payer_id, created_at, updated_at
        FROM accounts
        WHERE payer_id = #{payerId}::uuid
        ORDER BY created_at DESC
    </select>


    <select id="existsById" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM accounts WHERE id = #{id}::uuid)
    </select>

    <select id="existsByRequesterIdAndPayerId" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM accounts WHERE requester_id = #{requesterId}::uuid AND payer_id = #{payerId}::uuid)
    </select>

    <!-- Insert Queries -->
    <insert id="insert">
        INSERT INTO accounts (id, requester_id, payer_id, created_at, updated_at)
        VALUES (#{account.id}::uuid, #{account.requesterId}::uuid, #{account.payerId}::uuid, #{account.createdAt}, #{account.updatedAt})
    </insert>

    <!-- Update Queries -->
    <update id="update">
        UPDATE accounts
        SET updated_at = #{account.updatedAt}
        WHERE id = #{account.id}::uuid
    </update>

    <!-- Delete Queries -->
    <delete id="delete">
        DELETE FROM accounts WHERE id = #{id}::uuid
    </delete>

</mapper>
