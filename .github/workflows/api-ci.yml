name: Solveza API CI

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/api-ci.yml'

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          api
        sparse-checkout-cone-mode: false

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('api/**/*.gradle*', 'api/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: api

    - name: Run Spotless check
      run: ./gradlew spotlessCheck
      working-directory: api

    - name: Run tests
      run: ./gradlew test --info --stacktrace
      working-directory: api
      env:
        SPRING_PROFILES_ACTIVE: test

    - name: Build application
      run: ./gradlew build -x test
      working-directory: api

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Solveza API Tests
        path: api/build/test-results/test/*.xml
        reporter: java-junit
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload coverage reports to Codecov
      if: github.event_name == 'push'
      uses: codecov/codecov-action@v5
      with:
        directory: api/build/reports/jacoco/test/
        flags: solveza-api
        token: ${{ secrets.CODECOV_TOKEN }}

  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          api
        sparse-checkout-cone-mode: false

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('api/**/*.gradle*', 'api/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      working-directory: api

    - name: Build and analyze
      run: ./gradlew build sonar --info
      working-directory: api
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
